<?php

namespace common\modules\customermanagement\models;

use Yii;

/**
 * This is the model class for table "{{%customer_group}}".
 *
 * @property string $customer_group_id
 * @property string $name
 * @property string $description
 * @property integer $is_default
 *
 * @property Customers[] $customers
 * @property ProductDiscount[] $productDiscounts
 */
class CustomerGroup extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%customer_group}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['description'], 'string'],
            [['name'], 'string', 'max' => 32],
            [['name', 'description'], 'match', 'pattern' => '/^[A-Za-z0-9_~\-@\\^\(\)]+$/'],
            [['is_default'], 'integer'],
        ];
    }

    public function beforeSave($insert)
    {
        if($this->is_default && $oldDefault = self::find()->where(['is_default'=>true])->one())
        {
            $oldDefault->is_default = 0 ;
            $oldDefault->save();
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub

    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'customer_group_id' => Yii::t('app', 'Customer Group ID'),
            'name' => Yii::t('app', 'Name'),
            'description' => Yii::t('app', 'Description'),
            'is_default' => Yii::t('app', 'Default'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomers()
    {
        return $this->hasMany(Customers::className(), ['customer_group_id' => 'customer_group_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductDiscounts()
    {
        return $this->hasMany(ProductDiscount::className(), ['customer_group_id' => 'customer_group_id']);
    }
}
